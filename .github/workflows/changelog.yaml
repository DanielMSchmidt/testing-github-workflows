# This workflow makes sure contributors don't forget to add a changelog entry or explicitly opt-out of it.

name: Changelog

on:
  pull_request:
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize
      - labeled
      - unlabeled

# This workflow runs for not-yet-reviewed external contributions and so it
# intentionally has no write access and only limited read access to the
# repository.
permissions:
  contents: read

jobs:
  check-changelog-entry:
    name: "Check Changelog Entry"
    runs-on: ubuntu-latest

    steps:
      - name: "Changed files"
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changelog
        with:
          filters: |
            unreleased:
              - '.changes/unreleased/*.yaml'
            backported:
              - '.changes/backported/*.yaml'

      - name: "Check for changelog entry"
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const unreleasedChangesPresent = ${{steps.changelog.outputs.unreleased}};
            const backportedChangesPresent = ${{steps.changelog.outputs.backported}};

            const prLabels = await github.rest.issues.listLabelsOnIssue({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo
            });
            const backportLabel = prLabels.data.find(label => label.name.includes('-backport'));
            const noChangelogNeededLabel = prLabels.data.find(label => label.name === 'no-changelog-needed');


            if (noChangelogNeededLabel) {
                if (unreleasedChangesPresent || backportedChangesPresent) {
                    core.setFailed("Please remove either the 'no-changelog-needed' label or the changelog entry from this PR.");
                }
                return;
            }
            
            if (backportLabel) {
                if (unreleasedChangesPresent) {
                    core.setFailed("Please move the changelog entry from `./.changes/unreleased` to `./.changes/backported` for this change. If you believe this change does not need a changelog entry, please add the 'no-changelog-needed' label.");
                }
                
                if (!backportedChangesPresent) {
                    core.setFailed("Please add a changelog entry to `./.changes/backported` for this change. If you believe this change does not need a changelog entry, please add the 'no-changelog-needed' label.");
                }
            } else {
                if (backportedChangesPresent) {
                    core.setFailed("Please move the changelog entry from `./.changes/backported` to `./.changes/unreleased` for this change. If you believe this change does not need a changelog entry, please add the 'no-changelog-needed' label.");
                }

                if (!unreleasedChangesPresent) {
                    core.setFailed("Please add a changelog entry to `./.changes/unreleased` for this change. If you believe this change does not need a changelog entry, please add the 'no-changelog-needed' label.");
                }
            }